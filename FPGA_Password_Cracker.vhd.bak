library IEEE;
use IEEE.STD_LOGIC_1164.all;

entity FPGA_Password_Cracker is
	port (
		50CLK : in std_logic;
		sw3, sw2, sw1, sw0 : in bit;
		led0 : out std_logic);
end FPGA_Password_Cracker;

architecture Behavior of FPGA_Password_Cracker is
	signal counter : std_logic_vector(24 downto 0);
	signal CLK_1HZ : std_logic;
	signal guess	: std_logic_vector(3 downto 0);
	signal enable  : bit;
	
begin
	Prescaler: process (50clk)
	begin
		if CLK_50MHz'event and CLK_50MHz = '1' and NOT enable then
         if counter < "1011111010111100001000000" then
            counter <= counter + 1;
         else
            guess <= guess + 1;
            counter <= (others => '0');
         end if;
      end if;
   end process Prescaler;
	
	switch: process(sw3, sw2, sw1, sw0)
	begin
		if sw3 = guess(3) and sw2 = guess(2) and sw1 = guess(1) and sw0 = guess(0) then
			led0 <= '1';
			enable <= '1';
		else
			led0 <= '0';
		end if;
		
	end process switch;
	
end Behavior;